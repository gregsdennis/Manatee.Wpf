<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:cvtr="clr-namespace:Manatee.Wpf.Converters;assembly=Manatee.Wpf"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:collections="clr-namespace:System.Collections;assembly=mscorlib">
	<DataTemplate x:Key="Converters">
		<DataTemplate.Resources>
			<Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
				<Setter Property="Margin" Value="5,0,5,5"/>
				<Setter Property="Padding" Value="5"/>
			</Style>
		</DataTemplate.Resources>
		<StackPanel>
			<GroupBox Header="Boolean -> Visibility" Margin="5">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<CheckBox x:Name="BoolToVisibilitySource" VerticalAlignment="Center" Content="Click me"/>
					<StackPanel Grid.Column="1">
						<TextBlock Text="FalseToCollapsed"
								   Visibility="{Binding IsChecked, ElementName=BoolToVisibilitySource, Converter={x:Static cvtr:BoolToVisibility.FalseToCollapsed}}"/>
						<TextBlock Text="TrueToCollapsed"
								   Visibility="{Binding IsChecked, ElementName=BoolToVisibilitySource, Converter={x:Static cvtr:BoolToVisibility.TrueToCollapsed}}"/>
						<TextBlock Text="FalseToHidden"
								   Visibility="{Binding IsChecked, ElementName=BoolToVisibilitySource, Converter={x:Static cvtr:BoolToVisibility.FalseToHidden}}"/>
						<TextBlock Text="TrueToHidden"
								   Visibility="{Binding IsChecked, ElementName=BoolToVisibilitySource, Converter={x:Static cvtr:BoolToVisibility.TrueToHidden}}"/>
					</StackPanel>
				</Grid>
			</GroupBox>
			<GroupBox Header="Boolean Inversion">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<CheckBox x:Name="BooleanInversionSource" VerticalAlignment="Center" Content="Click me"/>
					<TextBlock Grid.Column="1" Text="{Binding IsChecked, ElementName=BooleanInversionSource, Converter={x:Static cvtr:BooleanInverter.Instance}}"/>
				</Grid>
			</GroupBox>
			<GroupBox Header="Enum Values &amp; Enum -> UI String">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<TextBlock Grid.ColumnSpan="2">
						<Run Text="The UI values are set in"/>
						<Run Text="App.xaml.cs" FontStyle="Italic"/>
					</TextBlock>
					<ComboBox x:Name="EnumToUiStringSource" Grid.Row="1" SelectedIndex="0" Margin="0,5,0,0"
							  ItemsSource="{Binding Source={x:Type sys:DayOfWeek}, Converter={x:Static cvtr:EnumValues.Values}}"/>
					<TextBlock Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center"
							   Text="{Binding SelectedItem, ElementName=EnumToUiStringSource, Converter={x:Static cvtr:EnumToUiString.Instance}}"/>
				</Grid>
			</GroupBox>
			<GroupBox Header="Null -> Boolean">
				
			</GroupBox>
			<GroupBox Header="Formatting Strings">
				<StackPanel>
					<Label Target="{Binding ElementName=FormatSource}" Content="Format"/>
					<TextBox x:Name="FormatSource"/>
					<Label Target="{Binding ElementName=Data1}" Content="Format"/>
					<TextBox x:Name="Data1"/>
					<Label Target="{Binding ElementName=Data2}" Content="Format"/>
					<TextBox x:Name="Data2"/>
					<Label Target="{Binding ElementName=Data3}" Content="Format"/>
					<TextBox x:Name="Data3"/>
					<Separator Margin="0,5"/>
					<TextBlock>
						<TextBlock.Text>
							<MultiBinding Converter="{x:Static cvtr:StringFormatter.Instance}" FallbackValue="">
								<Binding ElementName="FormatSource" Path="Text"/>
								<Binding ElementName="Data1" Path="Text"/>
								<Binding ElementName="Data2" Path="Text"/>
								<Binding ElementName="Data3" Path="Text"/>
							</MultiBinding>
						</TextBlock.Text>
					</TextBlock>
				</StackPanel>
			</GroupBox>
			<GroupBox Header="String -> Null State">

			</GroupBox>
			<GroupBox Header="Value -> Resource">
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition/>
					</Grid.RowDefinitions>
					<Grid.ColumnDefinitions>
						<ColumnDefinition/>
						<ColumnDefinition/>
					</Grid.ColumnDefinitions>
					<TextBlock Text="This ComboBox is populated with types.  The converter finds application-level resources with these values as keys."
							   Grid.ColumnSpan="2" TextWrapping="Wrap"/>
					<ComboBox x:Name="ValueToResourceSource" Grid.Row="1" SelectedIndex="0" Margin="0,5,5,0">
						<x:Type Type="collections:IEnumerable"/>
						<x:Type Type="collections:ICollection"/>
						<x:Type Type="collections:IList"/>
					</ComboBox>
					<Border Grid.Row="1" Grid.Column="1" Margin="5,5,0,0"
							Background="{Binding SelectedItem, ElementName=ValueToResourceSource, Converter={x:Static cvtr:ValueToResource.Instance}}"/>
				</Grid>
			</GroupBox>
		</StackPanel>
	</DataTemplate>
</ResourceDictionary>